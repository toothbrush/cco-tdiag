imports
{
import CCO.SourcePos        (SourcePos)
import CCO.Tree             (ATerm (App), Tree (fromTree, toTree))
import CCO.Picture.AG
import CCO.Diag.GeneratePictures
import CCO.Tree.Parser      (parseTree, app, arg)
import Control.Applicative  (Applicative ((<*>)), (<$>))
}

attr Diag 
    syn typecheck   :: Diag

attr Diag_
    syn typecheck   :: Diag_

sem Diag
    | Diag lhs.typecheck = Diag @pos @d.typecheck


sem Diag_ 
  -- simple 
    | Program     lhs.typecheck = Program @p @l
    | Platform    lhs.typecheck = Platform @m
    | Interpreter lhs.typecheck = Interpreter @i @l @m
    | Compiler    lhs.typecheck = Compiler @c @l1 @l2 @m
    | Execute     lhs.typecheck = Execute @d1.typecheck @d2.typecheck
    | Compile     lhs.typecheck = Compile @d1.typecheck @d2.typecheck


  {-
      | Program      p  :: {Ident}  l  :: {Ident}
        | Platform     m  :: {Ident}
          | Interpreter  i  :: {Ident}  l  :: {Ident}  m  :: {Ident}
            | Compiler     c  :: {Ident}  l1 :: {Ident}  l2 :: {Ident}  m :: {Ident}
              | Execute      d1 :: Diag     d2 :: Diag
                | Compile      d1 :: Diag     d2 :: Diag

-}
